{"remainingRequest":"/usr/local/lib/node_modules/@vue/cli-service-global/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/divyanshurawat/Desktop/firebase-vue/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/divyanshurawat/Desktop/firebase-vue/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/divyanshurawat/Desktop/firebase-vue/src/components/Login.vue?vue&type=template&id=c27482c4&","dependencies":[{"path":"/Users/divyanshurawat/Desktop/firebase-vue/src/components/Login.vue","mtime":1536758225537},{"path":"/Users/divyanshurawat/Desktop/firebase-vue/node_modules/cache-loader/dist/cjs.js","mtime":1536656786814},{"path":"/usr/local/lib/node_modules/@vue/cli-service-global/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/divyanshurawat/Desktop/firebase-vue/node_modules/cache-loader/dist/cjs.js","mtime":1536656786814},{"path":"/Users/divyanshurawat/Desktop/firebase-vue/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"div\",\n    { attrs: { id: \"login\" } },\n    [\n      _c(\"transition\", { attrs: { name: \"fade\" } }, [\n        _vm.performingRequest\n          ? _c(\"div\", { staticClass: \"loading\" }, [\n              _c(\"p\", [_vm._v(\"Loading...\")])\n            ])\n          : _vm._e()\n      ]),\n      _c(\"section\", [\n        _vm._m(0),\n        _c(\n          \"div\",\n          {\n            staticClass: \"col2\",\n            class: {\n              \"signup-form\": !_vm.showLoginForm && !_vm.showForgotPassword\n            }\n          },\n          [\n            _vm.showLoginForm\n              ? _c(\n                  \"form\",\n                  {\n                    on: {\n                      submit: function($event) {\n                        $event.preventDefault()\n                      }\n                    }\n                  },\n                  [\n                    _c(\"h1\", [_vm._v(\"Welcome to Hacker News\")]),\n                    _c(\"label\", { attrs: { for: \"email\" } }, [_vm._v(\"Email\")]),\n                    _c(\"input\", {\n                      directives: [\n                        {\n                          name: \"model\",\n                          rawName: \"v-model.trim\",\n                          value: _vm.loginForm.email,\n                          expression: \"loginForm.email\",\n                          modifiers: { trim: true }\n                        }\n                      ],\n                      attrs: {\n                        type: \"text\",\n                        placeholder: \"you@email.com\",\n                        id: \"email\"\n                      },\n                      domProps: { value: _vm.loginForm.email },\n                      on: {\n                        input: function($event) {\n                          if ($event.target.composing) {\n                            return\n                          }\n                          _vm.$set(\n                            _vm.loginForm,\n                            \"email\",\n                            $event.target.value.trim()\n                          )\n                        },\n                        blur: function($event) {\n                          _vm.$forceUpdate()\n                        }\n                      }\n                    }),\n                    _c(\"label\", { attrs: { for: \"password\" } }, [\n                      _vm._v(\"Password\")\n                    ]),\n                    _c(\"input\", {\n                      directives: [\n                        {\n                          name: \"model\",\n                          rawName: \"v-model.trim\",\n                          value: _vm.loginForm.password,\n                          expression: \"loginForm.password\",\n                          modifiers: { trim: true }\n                        }\n                      ],\n                      attrs: {\n                        type: \"password\",\n                        placeholder: \"******\",\n                        id: \"password\"\n                      },\n                      domProps: { value: _vm.loginForm.password },\n                      on: {\n                        input: function($event) {\n                          if ($event.target.composing) {\n                            return\n                          }\n                          _vm.$set(\n                            _vm.loginForm,\n                            \"password\",\n                            $event.target.value.trim()\n                          )\n                        },\n                        blur: function($event) {\n                          _vm.$forceUpdate()\n                        }\n                      }\n                    }),\n                    _c(\n                      \"button\",\n                      { staticClass: \"button\", on: { click: _vm.login } },\n                      [_vm._v(\"Log In\")]\n                    ),\n                    _vm._m(1)\n                  ]\n                )\n              : _vm._e(),\n            !_vm.showLoginForm && !_vm.showForgotPassword\n              ? _c(\n                  \"form\",\n                  {\n                    on: {\n                      submit: function($event) {\n                        $event.preventDefault()\n                      }\n                    }\n                  },\n                  [\n                    _c(\"h1\", [_vm._v(\"Get Started\")]),\n                    _c(\"label\", { attrs: { for: \"name\" } }, [_vm._v(\"Name\")]),\n                    _c(\"input\", {\n                      directives: [\n                        {\n                          name: \"model\",\n                          rawName: \"v-model.trim\",\n                          value: _vm.signupForm.name,\n                          expression: \"signupForm.name\",\n                          modifiers: { trim: true }\n                        }\n                      ],\n                      attrs: {\n                        type: \"text\",\n                        placeholder: \"Savvy Apps\",\n                        id: \"name\"\n                      },\n                      domProps: { value: _vm.signupForm.name },\n                      on: {\n                        input: function($event) {\n                          if ($event.target.composing) {\n                            return\n                          }\n                          _vm.$set(\n                            _vm.signupForm,\n                            \"name\",\n                            $event.target.value.trim()\n                          )\n                        },\n                        blur: function($event) {\n                          _vm.$forceUpdate()\n                        }\n                      }\n                    }),\n                    _c(\"label\", { attrs: { for: \"title\" } }, [_vm._v(\"Title\")]),\n                    _c(\"input\", {\n                      directives: [\n                        {\n                          name: \"model\",\n                          rawName: \"v-model.trim\",\n                          value: _vm.signupForm.title,\n                          expression: \"signupForm.title\",\n                          modifiers: { trim: true }\n                        }\n                      ],\n                      attrs: {\n                        type: \"text\",\n                        placeholder: \"Company\",\n                        id: \"title\"\n                      },\n                      domProps: { value: _vm.signupForm.title },\n                      on: {\n                        input: function($event) {\n                          if ($event.target.composing) {\n                            return\n                          }\n                          _vm.$set(\n                            _vm.signupForm,\n                            \"title\",\n                            $event.target.value.trim()\n                          )\n                        },\n                        blur: function($event) {\n                          _vm.$forceUpdate()\n                        }\n                      }\n                    }),\n                    _c(\"label\", { attrs: { for: \"email2\" } }, [\n                      _vm._v(\"Email\")\n                    ]),\n                    _c(\"input\", {\n                      directives: [\n                        {\n                          name: \"model\",\n                          rawName: \"v-model.trim\",\n                          value: _vm.signupForm.email,\n                          expression: \"signupForm.email\",\n                          modifiers: { trim: true }\n                        }\n                      ],\n                      attrs: {\n                        type: \"text\",\n                        placeholder: \"you@email.com\",\n                        id: \"email2\"\n                      },\n                      domProps: { value: _vm.signupForm.email },\n                      on: {\n                        input: function($event) {\n                          if ($event.target.composing) {\n                            return\n                          }\n                          _vm.$set(\n                            _vm.signupForm,\n                            \"email\",\n                            $event.target.value.trim()\n                          )\n                        },\n                        blur: function($event) {\n                          _vm.$forceUpdate()\n                        }\n                      }\n                    }),\n                    _c(\"label\", { attrs: { for: \"password2\" } }, [\n                      _vm._v(\"Password\")\n                    ]),\n                    _c(\"input\", {\n                      directives: [\n                        {\n                          name: \"model\",\n                          rawName: \"v-model.trim\",\n                          value: _vm.signupForm.password,\n                          expression: \"signupForm.password\",\n                          modifiers: { trim: true }\n                        }\n                      ],\n                      attrs: {\n                        type: \"password\",\n                        placeholder: \"min 6 characters\",\n                        id: \"password2\"\n                      },\n                      domProps: { value: _vm.signupForm.password },\n                      on: {\n                        input: function($event) {\n                          if ($event.target.composing) {\n                            return\n                          }\n                          _vm.$set(\n                            _vm.signupForm,\n                            \"password\",\n                            $event.target.value.trim()\n                          )\n                        },\n                        blur: function($event) {\n                          _vm.$forceUpdate()\n                        }\n                      }\n                    }),\n                    _c(\n                      \"button\",\n                      { staticClass: \"button\", on: { click: _vm.signup } },\n                      [_vm._v(\"Sign Up\")]\n                    ),\n                    _c(\"div\", { staticClass: \"extras\" }, [\n                      _c(\"a\", { on: { click: _vm.toggleForm } }, [\n                        _vm._v(\"Back to login\")\n                      ])\n                    ])\n                  ]\n                )\n              : _vm._e(),\n            _vm.showForgotPassword\n              ? _c(\n                  \"form\",\n                  {\n                    staticClass: \"password-reset\",\n                    on: {\n                      submit: function($event) {\n                        $event.preventDefault()\n                      }\n                    }\n                  },\n                  [\n                    !_vm.passwordResetSuccess\n                      ? _c(\"div\", [\n                          _c(\"h1\", [_vm._v(\"Reset Password\")]),\n                          _c(\"p\", [\n                            _vm._v(\n                              \"An Email Will Be Sent @Registered Email Address.\"\n                            )\n                          ]),\n                          _c(\"label\", { attrs: { for: \"email3\" } }, [\n                            _vm._v(\"Email\")\n                          ]),\n                          _c(\"input\", {\n                            directives: [\n                              {\n                                name: \"model\",\n                                rawName: \"v-model.trim\",\n                                value: _vm.passwordForm.email,\n                                expression: \"passwordForm.email\",\n                                modifiers: { trim: true }\n                              }\n                            ],\n                            attrs: {\n                              type: \"text\",\n                              placeholder: \"you@email.com\",\n                              id: \"email3\"\n                            },\n                            domProps: { value: _vm.passwordForm.email },\n                            on: {\n                              input: function($event) {\n                                if ($event.target.composing) {\n                                  return\n                                }\n                                _vm.$set(\n                                  _vm.passwordForm,\n                                  \"email\",\n                                  $event.target.value.trim()\n                                )\n                              },\n                              blur: function($event) {\n                                _vm.$forceUpdate()\n                              }\n                            }\n                          }),\n                          _c(\n                            \"button\",\n                            {\n                              staticClass: \"button\",\n                              on: { click: _vm.resetPassword }\n                            },\n                            [_vm._v(\"Submit\")]\n                          ),\n                          _c(\"div\", { staticClass: \"extras\" }, [\n                            _c(\n                              \"a\",\n                              { on: { click: _vm.togglePasswordReset } },\n                              [_vm._v(\"Back to login\")]\n                            )\n                          ])\n                        ])\n                      : _c(\"div\", [\n                          _c(\"h1\", [_vm._v(\"Email Sent\")]),\n                          _c(\"p\", [_vm._v(\"Kindly check Your Email\")]),\n                          _c(\n                            \"button\",\n                            {\n                              staticClass: \"button\",\n                              on: { click: _vm.togglePasswordReset }\n                            },\n                            [_vm._v(\"Back to login\")]\n                          )\n                        ])\n                  ]\n                )\n              : _vm._e(),\n            _c(\"transition\", { attrs: { name: \"fade\" } }, [\n              _vm.errorMsg !== \"\"\n                ? _c(\"div\", { staticClass: \"error-msg\" }, [\n                    _c(\"p\", [_vm._v(_vm._s(_vm.errorMsg))])\n                  ])\n                : _vm._e()\n            ])\n          ],\n          1\n        )\n      ])\n    ],\n    1\n  )\n}\nvar staticRenderFns = [\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"col1\" }, [\n      _c(\"h1\", [_vm._v(\"Hacker News\")]),\n      _c(\"p\", [\n        _vm._v(\n          \"Hacker News is a social news website focusing on computer science and entrepreneurship. \"\n        )\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"extras\" }, [\n      _c(\"a\", [_vm._v(\"Forgot Password\")]),\n      _c(\"a\", [_vm._v(\"Create An Account\")])\n    ])\n  }\n]\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}