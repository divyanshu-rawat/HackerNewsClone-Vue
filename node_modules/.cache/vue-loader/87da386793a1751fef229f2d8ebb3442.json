{"remainingRequest":"/Users/divyanshurawat/Desktop/firebase-vue/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/divyanshurawat/Desktop/firebase-vue/src/components/Dashboard.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/divyanshurawat/Desktop/firebase-vue/src/components/Dashboard.vue","mtime":1536954091749},{"path":"/Users/divyanshurawat/Desktop/firebase-vue/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/divyanshurawat/Desktop/firebase-vue/node_modules/cache-loader/dist/cjs.js","mtime":1536656786814},{"path":"/Users/divyanshurawat/Desktop/firebase-vue/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n    import { fbconfig } from '../firebaseConfig';\n    import { mapState } from 'vuex'\n    import moment from 'moment'\n    \n    export default {\n     data(){\n\n    \treturn{\n    \t\tpost : {\n    \t\t\tcontent: ''\n    \t\t},\n\n    \t\tcomment:{\n    \t\t\tpostId: '',\n    \t\t\tuserId: '',\n    \t\t\tcontent: '',\n    \t\t\tpostComments : 0\n    \t\t},\n\n    \t\tshowCommentModal: false\n    \t}\n\n      },\n\n      computed:{\n      \t\t...mapState(['userProfile','currentUser','posts'])\n      },\n      methods:{\n      \tcreatePost(){\n\n      \t\tfbconfig.postsCollection.add({\n\n      \t\t\tcreatedOn: new Date(),\n      \t\t\tcontent  : this.post.content,\n      \t\t\tuserId   : this.currentUser.uid,\n      \t\t\tuserName : this.userProfile.name,\n      \t\t\tcomments : 0,\n      \t\t\tlikes    : 0,\n      \t\t\ttitle    : this.post.title\n\n      \t\t}).then( () =>{\n      \t\t\tthis.post.content = ''\n      \t\t}).catch( err => {\n      \t\t\tconsole.log(err);\n      \t\t})\n      \t},\n      \topenCommentModal(post) {\n\t\t    this.comment.postId = post.id\n\t\t    this.comment.userId = post.userId\n\t\t    this.comment.postComments = post.comments\n\t\t    this.showCommentModal = true\n\t\t    console.log('I am in!')\n\t\t},\n\t\tcloseCommentModal() {\n\t\t    this.comment.postId = ''\n\t\t    this.comment.userId = ''\n\t\t    this.comment.content = ''\n\t\t    this.showCommentModal = false\n\t\t},\n\t     addComment() {\n            let postId = this.comment.postId\n            let postComments = this.comment.postComments\n\n            fb.commentsCollection.add({\n                createdOn: new Date(),\n                content: this.comment.content,\n                postId: postId,\n                userId: this.currentUser.uid,\n                userName: this.userProfile.name\n            }).then(doc => {\n                fb.postsCollection.doc(postId).update({\n                    comments: postComments + 1\n                }).then(() => {\n                    this.closeCommentModal()\n                })\n            }).catch(err => {\n                console.log(err)\n            })\n        }\n      }, \n\n         filters: {\n\t\t    formatDate(val) {\n\t\t        if (!val) { return '-' }\n\t\t        let date = val.toDate()\n\t\t        return moment(date).fromNow()\n\t\t    },\n\t\t    trimLength(val) {\n\t\t        if (val.length < 200) {\n\t\t            return val\n\t\t        }\n\n\t\t        console.log('Postsfilter',this.posts);\n\t\t        return `${val.substring(0, 200)}...`\n\t\t    }\n\t\t},\n\n      // data(){\n      // \treturn{\n      // \t\tuserProfile: this.$store.state.userProfile\n      // \t}\n      // },\n\n      // methods:{\n      // \tset(){\n      // \t\tconsole.log('called');\n      // \t\tthis.userProfile = this.$store.state.userProfile\n      // \t}\n      // },\n      \n       updated(){\n\t        console.log('Posts',this.$store.state.posts);\n\t        console.log('Posts',this.posts);\n\t    \t// this.set()\n\t   } \n    }\n",{"version":3,"sources":["Dashboard.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmfile":"Dashboard.vue","sourceRoot":"components","sourcesContent":["<template>\n   <div id=\"dashboard\">\n      <div class=\"margin\">\n         <div class=\"margin-top\">\n            <h3>Create Post </h3>\n            <form @submit.prevent>\n               <div class=\"form-group col-lg-4\" >\n                  <label for=\"comment\">Title:</label>\n                  <input v-model:trim = \"post.title\" class=\"form-control\"></input>\n               </div>\n               <div class=\"form-group col-lg-4\" >\n                  <label for=\"comment\">Content:</label>\n                  <textarea v-model:trim = \"post.content\" class=\"form-control\" rows=\"2\" id=\"comment\"></textarea>\n                  <button @click = \"createPost\" :disabled = \"post.content == ''\" class=\"btn btn-default\">POST</button>\n               </div>\n            </form>\n         </div>\n         <div class=\"col-lg-12 margin-top\">\n            <h3> Content Posted By Users </h3>\n\n            <div v-if=\"posts.length\">\n               <div class=\"row\">\n                  <div class=\"card margin-top col-3\" v-for=\"post in posts\">\n                     <div class=\"card-body\">\n                        <h4 class=\"card-text\">{{ post.title}}</h4>\n                        <p class=\"card-text\">{{ post.content | trimLength }}</p>\n                        <p class=\"card-text-username\">By: {{ post.userName}},\n                         <span >Comments: {{ post.comments }}</span>,\n                         <span >Likes: {{ post.likes }}</span>\n                       </p>\n\n                        <b-btn v-b-modal.modal1 @click = \"openCommentModal(post)\" >See Full Post</b-btn>\n                     </div>\n                  </div>\n               </div>\n            </div>\n         </div>\n         <div v-if = \"posts.length == 0\">\n            <p class=\"no-results\">There are currently no posts</p>\n         </div>\n      </div>\n\n<!-- Comment modal -->\n    <!--   \t   <transition name=\"fade\">\n            <div v-if=\"showCommentModal\" class=\"c-modal\">\n                <div class=\"c-container\">\n                    <a @click=\"closeCommentModal\">X</a>\n                    <p>add a comment</p>\n                    <form @submit.prevent>\n                        <textarea v-model.trim=\"comment.content\"></textarea>\n                        <button @click=\"addComment\" :disabled=\"comment.content == ''\" class=\"button\">add comment</button>\n                    </form>\n                </div>\n            </div>\n        </transition> -->\n\n\t\t\t<div>\n\t\t\t  \n\n\t\t\t  <!-- Modal Component -->\n\t\t\t  <b-modal id=\"modal1\" title=\"Bootstrap-Vue\"  class=\"c-modal\">\n\t\t\t    <p class=\"my-4\">Hello from modal!</p>\n\t\t\t  </b-modal>\n\t\t\t</div>\n\n\n<!-- Post modal -->\n\t\n\t\t<!--  <transition name=\"fade\">\n            <div v-if=\"showPostModal\" class=\"p-modal\">\n                <div class=\"p-container\">\n                    <a @click=\"closePostModal\" class=\"close\">X</a>\n                    <div class=\"post\">\n                        <h5>{{ fullPost.userName }}</h5>\n                        <span>{{ fullPost.createdOn | formatDate }}</span>\n                        <p>{{ fullPost.content }}</p>\n                        <ul>\n                            <li><a>comments {{ fullPost.comments }}</a></li>\n                            <li><a>likes {{ fullPost.likes }}</a></li>\n                        </ul>\n                    </div>\n                    <div v-show=\"postComments.length\" class=\"comments\">\n                        <div v-for=\"comment in postComments\" class=\"comment\">\n                            <p>{{ comment.userName }}</p>\n                            <span>{{ comment.createdOn | formatDate }}</span>\n                            <p>{{ comment.content }}</p>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </transition> -->\n\n<!--  -->\n   </div>\n   </div>\n</template>\n\n\n<script>\n    import { fbconfig } from '../firebaseConfig';\n    import { mapState } from 'vuex'\n    import moment from 'moment'\n    \n    export default {\n     data(){\n\n    \treturn{\n    \t\tpost : {\n    \t\t\tcontent: ''\n    \t\t},\n\n    \t\tcomment:{\n    \t\t\tpostId: '',\n    \t\t\tuserId: '',\n    \t\t\tcontent: '',\n    \t\t\tpostComments : 0\n    \t\t},\n\n    \t\tshowCommentModal: false\n    \t}\n\n      },\n\n      computed:{\n      \t\t...mapState(['userProfile','currentUser','posts'])\n      },\n      methods:{\n      \tcreatePost(){\n\n      \t\tfbconfig.postsCollection.add({\n\n      \t\t\tcreatedOn: new Date(),\n      \t\t\tcontent  : this.post.content,\n      \t\t\tuserId   : this.currentUser.uid,\n      \t\t\tuserName : this.userProfile.name,\n      \t\t\tcomments : 0,\n      \t\t\tlikes    : 0,\n      \t\t\ttitle    : this.post.title\n\n      \t\t}).then( () =>{\n      \t\t\tthis.post.content = ''\n      \t\t}).catch( err => {\n      \t\t\tconsole.log(err);\n      \t\t})\n      \t},\n      \topenCommentModal(post) {\n\t\t    this.comment.postId = post.id\n\t\t    this.comment.userId = post.userId\n\t\t    this.comment.postComments = post.comments\n\t\t    this.showCommentModal = true\n\t\t    console.log('I am in!')\n\t\t},\n\t\tcloseCommentModal() {\n\t\t    this.comment.postId = ''\n\t\t    this.comment.userId = ''\n\t\t    this.comment.content = ''\n\t\t    this.showCommentModal = false\n\t\t},\n\t     addComment() {\n            let postId = this.comment.postId\n            let postComments = this.comment.postComments\n\n            fb.commentsCollection.add({\n                createdOn: new Date(),\n                content: this.comment.content,\n                postId: postId,\n                userId: this.currentUser.uid,\n                userName: this.userProfile.name\n            }).then(doc => {\n                fb.postsCollection.doc(postId).update({\n                    comments: postComments + 1\n                }).then(() => {\n                    this.closeCommentModal()\n                })\n            }).catch(err => {\n                console.log(err)\n            })\n        }\n      }, \n\n         filters: {\n\t\t    formatDate(val) {\n\t\t        if (!val) { return '-' }\n\t\t        let date = val.toDate()\n\t\t        return moment(date).fromNow()\n\t\t    },\n\t\t    trimLength(val) {\n\t\t        if (val.length < 200) {\n\t\t            return val\n\t\t        }\n\n\t\t        console.log('Postsfilter',this.posts);\n\t\t        return `${val.substring(0, 200)}...`\n\t\t    }\n\t\t},\n\n      // data(){\n      // \treturn{\n      // \t\tuserProfile: this.$store.state.userProfile\n      // \t}\n      // },\n\n      // methods:{\n      // \tset(){\n      // \t\tconsole.log('called');\n      // \t\tthis.userProfile = this.$store.state.userProfile\n      // \t}\n      // },\n      \n       updated(){\n\t        console.log('Posts',this.$store.state.posts);\n\t        console.log('Posts',this.posts);\n\t    \t// this.set()\n\t   } \n    }\n</script>\n\n\n<style type=\"text/css\">\n\t\n.btn-default{\n\tcolor: white;\n\tbackground-color:#6c757d;\n\t/*border-color: #000000;*/\n\t/*border: 1px solid black; */\n\t/*padding: 0.375rem 0.75rem !important;*/\n\tmargin-top: 5px;\n\tfont-size: 1rem; \n\tline-height: 1.5; \n\tborder-radius: 0.25rem;\n}\n\n.btn-default:hover{\n    background-color: #cccccc;\n}\n\n.margin-top{\n    margin:10px !important;\n\n}\n.margin{\n\tmargin: 5px;\n}\n.card-text-username{\n\tfont-size: .8rem;\n}\n.baby{\n\tborder: 1px solid black;\n}\n</style>\n\n"]}]}